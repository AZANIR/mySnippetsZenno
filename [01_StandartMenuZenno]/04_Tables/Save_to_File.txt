//Создаём объект класса IZennoTable, привязываемся к списку уровня проекта
IZennoTable tblTest = project.Tables["Таблица 1"];
tblTest.Clear(); //очищаем таблицу

//наполняем таблицу тестовыми значениями
tblTest.AddRow(new String[]{"Это", "первая", "строка"});
tblTest.AddRow(new String[]{"Эта", "вторая", "строка"});
tblTest.AddRow(new String[]{"Это", "третья", "строка"});
tblTest.AddRow(new String[]{"Это", "четвёртая", "строка"});
tblTest.AddRow(new String[]{"Это", "пятая", "стрУка"});
tblTest.AddRow(new String[]{"Это", "шестая", "стрЕка"});
tblTest.AddRow(new String[]{"Это", "седьмая", "стрАка"});
tblTest.AddRow(new String[]{"Эты", "восьмая", "строка"});
tblTest.AddRow(new String[]{"Это", "девятая", "стростро"});

//Сохраняем таблицу в csv-файл.
string strFilePath = project.Directory + @"\Сохранённая_таблица.csv";
string strTableContent = String.Empty;
for(int i=0;i<tblTest.RowCount;i++) {
	strTableContent += String.Join(tblTest.CsvSeparator, tblTest.GetRow(i));
	if (i!=tblTest.RowCount-1) strTableContent += Environment.NewLine;
}
File.WriteAllText(strFilePath, strTableContent);

project.SendInfoToLog("Выполнено. Проверьте содержимое файла Сохранённая_таблица.csv");

//Примечания:
//1. Объект класса IZennoTable не имеет собственных методов для сохранения в xls-файл. Здесь продемонстрировано только сохранение в csv-файл. 
//Сохранение в таблицу Excel будет продемонстрировано в материале по работе со внешней библиотекой EPPlus.dll.